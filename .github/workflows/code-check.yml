name: Code Check

on:
  pull_request:

jobs:
  test:
    name: Test and coverage
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.18
        id: go

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clear mod cache
        run: go clean -modcache

      - name: Get dependencies
        run: |
          go mod tidy
          go mod vendor
          go get -v -t -d ./...

      - name: Run Unit tests
        run: |
          go test -race -covermode atomic -coverprofile=covprofile ./...

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=covprofile -service=github

  vet:
    name: go vet and statuscheck
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.18
        id: go

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clear mod cache
        run: go clean -modcache

      - name: go vet
        run: |
          go mod tidy
          go mod vendor
          go get -v -t -d ./...
          go vet ./...

      - name: go staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2023.1"
          install-go: false

  golangci:
    name: golangci lint check
    runs-on: ubuntu-latest
    continue-on-error: true  # This makes the step optional
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.18
        id: go

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clear mod cache
        run: go clean -modcache

      - name: Run golangci-lint
        run: |
          golangci-lint run --out-format=github-actions --config .golangci.yml
